name: build_rPackages

on:
  push:
    branches:
      - [main, master]

jobs:
  build-on-ubuntu:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.MY_PAT }}
      GITHUB_TOKEN: ${{ secrets.MY_PAT }}
    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set branch_date as today
        id: set_date
        run: echo "branch_date=$(date '+%Y-%m-%d')" >> $GITHUB_ENV

      - name: Check date
        run: echo ${{ env.branch_date }}

      - name: Update default.nix
        run: |
          sed -i 's/REPLACE_DATE/${{ env.branch_date }}/g' default.nix

      - name: Build on date ${{ github.event.client_payload.ref_name }}
        run: |
          nix-build --max-jobs 1 --cores 2 default.nix --keep-going 2>&1 | tee build.log

      - name: Check for failed builds
        run: |
          # Extract failed packages
          grep -oE 'removing.*' build.log | sort -u > failed.txt

          if [ -s failed.txt ]; then
            echo "Some packages failed to build:"
            cat failed.txt
            exit 1
          else
            echo "All packages built successfully."
          fi


  build-on-macos:
    name: Trigger build for available dates on macOS
    runs-on: macos-latest
    needs: update-and-trigger-ubuntu

    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/cachix-action@v15
        with:
          name: rstats-on-nix

      - name: Set branch_date as today
        id: set_date
        run: echo "branch_date=$(date '+%Y-%m-%d')" >> $GITHUB_ENV

      - name: Check date
        run: echo ${{ env.branch_date }}

      - name: Update default.nix
        run: |
          sed -i '' 's/REPLACE_DATE/${{ env.branch_date }}/g' default.nix

      - name: Build on date ${{ github.event.client_payload.ref_name }}
        run: |
          nix-build --max-jobs 1 --cores 2 default.nix --keep-going 2>&1 | tee build.log

      - name: Check for failed builds
        run: |
          # Extract failed packages
          grep -oE 'removing.*' build.log | sort -u > failed.txt

          if [ -s failed.txt ]; then
            echo "Some packages failed to build:"
            cat failed.txt
            exit 1
          else
            echo "All packages built successfully."
          fi

#  clone-and-open-pr:
#      name: Clone rix and open PR
#      runs-on: ubuntu-latest
#      needs: update-and-trigger-macos
#
#      steps:
#        - name: Clone rix and open PR
#          run: |
#            curl -X POST \
#            -H "Authorization: token ${{ secrets.UPDATE_AVAILABLE_DATES }}" \
#            -H "Accept: application/vnd.github.v3+json" \
#            https://api.github.com/repos/ropensci/rix/dispatches \
#            -d '{
#              "event_type": "trigger-workflow"
#            }'
