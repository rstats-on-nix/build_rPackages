name: build_rPackages top 200 to 400

on:
  push:
    branches: [master, main]
  schedule:
    - cron: '0 12 * * 1'

jobs:
  build-on-ubuntu:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.MY_PAT }}
      GITHUB_TOKEN: ${{ secrets.MY_PAT }}
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/cachix-action@v15
        with:
          name: rstats-on-nix

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set branch_date as today
        id: set_date
        run: echo "branch_date=$(date '+%Y-%m-%d')" >> $GITHUB_ENV

      - name: Check date
        run: echo ${{ env.branch_date }}

      - name: Download top CRAN packages
        run: wget https://raw.githubusercontent.com/rstats-on-nix/top_cran_monthly/refs/heads/master/aggregated_counts.csv

      - name: Set up R and rix
        run: |
          nix-shell -p R rPackages.rix --run 'Rscript -e "library(rix);
            agg <- read.csv(\"aggregated_counts.csv\", skip = 200, nrows = 200);
            pkgs <- agg$package;
            rix(
              date = \"2025-02-17\",
              r_pkgs = pkgs,
              ide = \"other\",
              project_path = \".\",
              overwrite = TRUE,
              print = FALSE
            )"'

      - name: Update default.nix
        run: |
          sed -i 's/2025-02-17/${{ env.branch_date }}/g' default.nix

      - name: Build on date ${{ github.event.client_payload.ref_name }} 
        run: |
          nix-build --max-jobs 2 --cores 2 default.nix --keep-going 2>&1 | tee -a build-linux2.log

      - name: Upload build log
        uses: actions/upload-artifact@v4
        with:
          name: build-linux2-log
          path: build-linux2.log
        continue-on-error: true

      - name: Check for failed builds
        run: |
          # Extract failed packages
          grep -oE 'removing.*' build-linux2.log | sort -u > failed.txt
          if [ -s failed.txt ]; then
            echo "Some packages failed to build:"
            cat failed.txt
            exit 1
          else
            echo "All packages built successfully."
          fi

  build-on-macos:
    runs-on: macos-latest
    needs: build-on-ubuntu

    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/cachix-action@v15
        with:
          name: rstats-on-nix

      - name: Set branch_date as today
        id: set_date
        run: echo "branch_date=$(date '+%Y-%m-%d')" >> $GITHUB_ENV

      - name: Check date
        run: echo ${{ env.branch_date }}

      - name: Set up R and rix
        run: |
          nix-shell -p R rPackages.rix --run 'Rscript -e "library(rix);
            agg <- read.csv(\"aggregated_counts.csv\", skip = 200, nrows = 200);
            pkgs <- agg$package;
            rix(
              date = \"2025-02-17\",
              r_pkgs = pkgs,
              ide = \"other\",
              project_path = \".\",
              overwrite = TRUE,
              print = FALSE
            )"'

      - name: Update default.nix
        run: |
          sed -i 's/2025-02-17/${{ env.branch_date }}/g' default.nix

      - name: Build on date ${{ github.event.client_payload.ref_name }}
        run: |
          nix-build --max-jobs 2 --cores 2 default.nix --keep-going 2>&1 | tee -a build-darwin2.log

      - name: Upload build log
        uses: actions/upload-artifact@v4
        with:
          name: build-darwin2-log
          path: build-darwin2.log
        continue-on-error: true

      - name: Check for failed builds
        run: |
          # Extract failed packages
          grep -oE 'removing.*' build-darwin2.log | sort -u > failed.txt
          if [ -s failed.txt ]; then
            echo "Some packages failed to build:"
            cat failed.txt
            exit 1
          else
            echo "All packages built successfully."
          fi

#  clone-and-open-pr:
#      name: Clone rix and open PR
#      runs-on: ubuntu-latest
#      needs: build-on-macos
#
#      steps:
#        - name: Clone rix and open PR
#          run: |
#            curl -X POST \
#            -H "Authorization: token ${{ secrets.UPDATE_AVAILABLE_DATES }}" \
#            -H "Accept: application/vnd.github.v3+json" \
#            https://api.github.com/repos/ropensci/rix/dispatches \
#            -d '{
#              "event_type": "trigger-workflow"
#            }'
